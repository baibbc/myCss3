@function pxTorem($px){//$px为需要转换的字号
  @return $px / $browser-default-font-size * 1rem;
  //@return $px;
}

//兼容性字体大小
@mixin font-size($size){
  font-size:$size;
  font-size:pxTorem($size);
}


//兼容性透明度
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin px2rem($property,$px-values,$baseline-px:16px,$support-for-ie:false){
  //Conver the baseline into rems
  $baseline-rem: $baseline-px / 1rem * 1;
  //Print the first line in pixel values
  @if $support-for-ie {
    #{$property}: $px-values;
  }
  //if there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number"{
    #{$property}: $px-values / $baseline-rem;
  }
  @else {
    //Create an empty list that we can dump values into
    $rem-values:();
    @each $value in $px-values{
      // If the value is zero or not a number, return it
      @if $value == 0 or type-of($value) != "number"{
        $rem-values: append($rem-values, $value / $baseline-rem);
      }
    }
    // Return the property and its list of converted values
    #{$property}: $rem-values;
  }
}

// @each @for @while
@mixin col-sm($width: 50%){
  @if type-of($width) != number {
    //抛出错误
    @error "$width必须是一个数值类型:#{$width}";
  }

  @if not unitless($width){
    @if unit($width) != "%" {
      @error "$width应该是个百比";
    }
  } @else {
    @warn "$width应该是一个百分值";
    $width:(percentage($width)) / 100;
  }

  @media (min-width:768px){
    width:$width;
    float:left;
  }

}